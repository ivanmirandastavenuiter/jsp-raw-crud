package com.ch33tz.filters;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Logger;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.ch33tz.logger.JspLogger;

/**
 * Servlet Filter implementation class RequestFilter
 */
@WebFilter(filterName = "LoginFilter", urlPatterns = {"/welcome.jsp"})
public class LoginFilter implements Filter {
	
	private final static Logger logger = Logger.getLogger(JspLogger.class.getName()); 
	private FilterConfig loginFilterConfig;

    /**
     * Default constructor. 
     */
    public LoginFilter() {
        logger.info("Creating LoginFilter");
    }

	/**
	 * @see Filter#destroy()
	 */
	public void destroy() {
		logger.info("Destroying LoginFilter");
		this.loginFilterConfig = null;
	}

	/**
	 * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		
		logger.info("Executing doFilter on LoginFilter");
		
		HttpServletRequest httpServletRequest = (HttpServletRequest)request;
		HttpServletResponse httpServletResponse = (HttpServletResponse)response;
		
		String username = httpServletRequest.getParameter("username");
		String password = httpServletRequest.getParameter("pass");
		String contextPath = "/";
		
		if (username == null || username.isEmpty()
					|| password == null || password.isEmpty()) {
			
			logger.info("Errors detected on login form. Redirecting to index.");
			
			Map<String, String> errors = new HashMap<String, String>();
			
			if (username == null || username.isEmpty()) {
				errors.put("username", "Error on username. Empty.");
			} 
			
			if (password == null || password.isEmpty() ) {
				errors.put("password", "Error on password. Empty.");
			}
			
			httpServletRequest.setAttribute("errors", errors);

            RequestDispatcher rd = httpServletRequest.getRequestDispatcher(contextPath);
            rd.forward(httpServletRequest, httpServletResponse);

		}
		
		Logger logger = Logger.getLogger(com.ch33tz.logger.JspLogger.class.getName()); 
		Connection conn = null;	
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		try {
			String sql = "SELECT * FROM user WHERE usId = ?";
			conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ch33tz", "root", "");
			stmt = conn.prepareStatement(sql);
			stmt.setInt(1, 4);
			rs = stmt.executeQuery();
			
			while (rs.next()) {
				logger.warning("User id: " + rs.getString("usId"));
				logger.warning("User name: " + rs.getString("usNam"));
				logger.warning("User password: " + rs.getString("usPas"));
			}
			
		} catch (Exception e) {
			
			logger.severe("Main exception on filter?: " +e.getMessage());
			
			
		} finally {
			
			try {
				
				if (rs != null) {
					rs.close();
				}
				
				if (stmt != null) {
					stmt.close();
				}
				
				if (conn != null) {
					conn.close();
				}
				
			} catch(Exception e) {
				
				logger.severe("Nested exception: " +e.getMessage());
				
			}
			
		}
		
		chain.doFilter(request, response);
	}

	/**
	 * @see Filter#init(FilterConfig)
	 */
	public void init(FilterConfig fConfig) throws ServletException {
		logger.info("LoginFilter initialization");
		this.loginFilterConfig = fConfig;
	}

}
